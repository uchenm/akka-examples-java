akka.actor.deployment {
  /round-robin-group {
    router = round-robin-group
    routees.paths = ["/user/w1", "/user/w2", "/user/w3"]
  }

  /random-router-pool {
    router = random-pool
    nr-of-instances = 3
  }
}

//akka {
//  persistence {
//    journal.plugin = "jdbc-journal"
//    snapshot-store.plugin = "jdbc-snapshot-store"
//  }
//}
//
//akka-persistence-jdbc {
//  slick {
//    driver = "slick.driver.MySQLDriver"
//    db {
//      host = "localhost"
//      port = "3306"
//      name = "akka-persistence-jdbc"
//
//      url = "jdbc:mysql://"${akka-persistence-jdbc.slick.db.host}":"${akka-persistence-jdbc.slick.db.port}"/"${akka-persistence-jdbc.slick.db.name}
//      user = "root"
//      password = "chenchen"
//      driver = "com.mysql.jdbc.Driver"
//      keepAliveConnection = on
//      numThreads = 2
//      queueSize = 100
//    }
//  }
//
//  tables {
//    journal {
//      tableName = "journal"
//      schemaName = ""
//      columnNames {
//        persistenceId = "persistence_id"
//        sequenceNumber = "sequence_number"
//        created = "created"
//        tags = "tags"
//        message = "message"
//      }
//    }
//
//    deletedTo {
//      tableName = "deleted_to"
//      schemaName = ""
//      columnNames = {
//        persistenceId = "persistence_id"
//        deletedTo = "deleted_to"
//      }
//    }
//
//    snapshot {
//      tableName = "snapshot"
//      schemaName = ""
//      columnNames {
//        persistenceId = "persistence_id"
//        sequenceNumber = "sequence_number"
//        created = "created"
//        snapshot = "snapshot"
//      }
//    }
//  }
//
//  query {
//    separator = ","
//  }
//}

//akka {
//  persistence {
//    journal {
//      plugin = "in-memory-journal"
//    },
//    snapshot-store {
//      plugin = "in-memory-journal"
//    }
//  }
//}

akka {
  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb",
      leveldb {
        dir = "target/example/journal",
        native = false
      }
    },
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local",
      local {
        dir = "target/example/snapshots"
      }
    }
  }
}
// akka loging configurations
//akka {
//  actor {
//    serializers {
//      akka = "akka.serialization.JavaSerializer"
////      proto = "akka.remote.serialization.ProtobufSerializer"
//    }
//    serialization-bindings {
//      "com.cffex.chapter4.persistence.Evt" = akka
//      "com.cffex.chapter5.singleton.Work" = akka
//    }
//  }
//}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

//remoting configurations
MembersService {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2552
      }
    }
  }
}

MemberServiceLookup {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2553
      }
    }
  }
}

MembersServiceRemoteCreation {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
      deployment {
        /workerActorRemote {
          remote: "akka.tcp://MembersService@127.0.0.1:2552"
        }
      }
    }
    remote {
      enabled-transports = ["akka.remote.netty.tcp"]
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2558
      }
    }
  }
}

//cluster
Frontend {
  akka {
    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2551
      }
    }

    cluster {
      roles = ["frontend"]
      seed-nodes = [
        "akka.tcp://ClusterSystem@127.0.0.1:2551"]

      auto-down-unreachable-after = 10s
    }
  }
}

Backend {
  akka{
    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
    }
    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "127.0.0.1"
        port = 0
      }
    }

    cluster {
      roles = ["backend"]
      seed-nodes = [
        "akka.tcp://ClusterSystem@127.0.0.1:2551"]

      auto-down-unreachable-after = 10s
    }
  }
}